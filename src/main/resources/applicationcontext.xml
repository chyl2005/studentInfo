<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:utils="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd

	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--此配置文件用于配置spring -->

    <context:component-scan base-package="com.github.stu"></context:component-scan>


    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="50"/>
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
                <value>classpath:database.properties</value>
            </list>
        </property>
    </bean>


    <!--启用aop支持 -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

    <!--开启@ Resource 注解支持 -->
    <context:annotation-config></context:annotation-config>


    <!--配置数据库连接池 使用alibaba druid -->

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${mysql.classname}"></property>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.name}"/>
        <property name="password" value="${mysql.pwd}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${mysql.initialSize}"/>
        <property name="minIdle" value="${mysql.minIdle}"/>
        <property name="maxActive" value="${mysql.maxActive}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="false"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="120000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="120000"/>
        <!-- 用来检测连接是否有效的sql，要求是一个查询语句 -->
        <property name="validationQuery" value="SELECT 'x'"/>
        <!-- 申请连接的时候检测 -->
        <property name="testWhileIdle" value="true"/>
        <!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
        <property name="testOnBorrow" value="false"/>
        <!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="0"/>
    </bean>


    <!--hibernateProperties通用配置 -->
    <utils:properties id="hibernateProperties">
        <!--mysql数据库方言 -->
        <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
        <!--打印sql语句 -->
        <prop key="hibernate.show_sql">false</prop>
        <!--打印sql语句时 方便阅读 -->
        <prop key="hibernate.format_sql">true</prop>
        <!--数据库生成策略 正式环境务必 update -->
        <prop key="hibernate.hbm2ddl.auto">update</prop>
        <!-- session -->
        <prop key="hibernate.current_session_context_class">
            org.springframework.orm.hibernate4.SpringSessionContext
        </prop>
    </utils:properties>


    <!--mai_play的session_Factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <ref bean="hibernateProperties"></ref>
        </property>
        <!--包扫描 替代配置文件 -->
        <property name="packagesToScan">
            <list>
                <value>com.github.stu.model</value>
            </list>
        </property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
        <!--为@Transactional提供区分 -->
        <!--<qualifier value="mp" />-->
    </bean>

    <!--启动事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>



    <bean id="classService" class="com.github.stu.service.ClassService">
        <property name="url" value="111"/>
        <property name="connectTimeout" value="1"/>
    </bean>
</beans>